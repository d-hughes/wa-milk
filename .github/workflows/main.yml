# This is a basic workflow to help you get started with Actions

name: Post to Wago

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Test
        run: echo "File is ${{ github.workspace }}/milk.wa"

      - name: HTTP Request Action
  # You may pin to the exact commit or the version.
  # uses: fjogeleit/http-request-action@d45f6649f63b711b64bcd10e95a600abe4468456
        uses: fjogeleit/http-request-action@v1.9.0
        with:
          # Request URL
          url: https://addons.wago.io/api/projects/H1KXkXxhU/version
          # Request Method
          method: POST
          # Content Type
          contentType: "application/json"
          # Request Body as JSON String
          #data: # optional, default is {}
          # Map of absolute file paths as JSON String
          #files: # optional, default is {}
          # A single absolute file path
          file: "${{ github.workspace }}/milk.wa"
          # Auth Username
          #username: # optional
          # Auth Password
          password: ${{ secrets.GITHUB_TOKEN }}
          # Request Timeout in Sec
          #timeout: # optional, default is 5000
          # Bearer Authentication Token
          #bearerToken: # optional
          # Custom HTTP Headers
          #customHeaders: Authorization 
          # Prevent this Action to fail if the request respond without an response
          #preventFailureOnNoResponse: # optional
          # Prevent this Action to fail if the request respond with one of the configured StatusCodes
          #ignoreStatusCodes: # optional
          # Escape newlines in data string content
          #escapeData: # optional
